name: Deploy M-Pathy

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install & Build
        run: |
          set -e
          npm ci
          npm run build

      - name: Package artifact (snapshot safe)
        run: |
          set -e
          SNAP="$(mktemp -d)"
          mkdir -p "$SNAP/package-src"
          rsync -a --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.next/cache' \
            ./ "$SNAP/package-src"/
          tar -C "$SNAP/package-src" -czf m-pathy.tar.gz .
          rm -rf "$SNAP"

      - name: Test SSH connectivity
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          script: echo "SSH OK"

      - name: Upload artifact via scp
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          source: "m-pathy.tar.gz"
          target: "/tmp"

      - name: Write /etc/m-pathy.env on server (with sudo password)
        uses: appleboy/ssh-action@v1.0.3
        env:
          SUDO_PASS: ${{ secrets.DEPLOY_PASSWORD }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          envs: SUDO_PASS           # ← WICHTIG: macht $SUDO_PASS auf dem Server verfügbar
          script: |
            set -e
            s() { echo "$SUDO_PASS" | sudo -S -p '' "$@"; }

            s tee /etc/m-pathy.env >/dev/null <<'EOF'
            AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}
            AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}
            AZURE_OPENAI_DEPLOYMENT=${{ secrets.AZURE_OPENAI_DEPLOYMENT }}
            AZURE_OPENAI_API_VERSION=${{ secrets.AZURE_OPENAI_API_VERSION }}
            NODE_ENV=production
            PORT=3000
            EOF

            s chmod 600 /etc/m-pathy.env

      - name: Remote deploy (atomic switch, with sudo password)
        uses: appleboy/ssh-action@v1.0.3
        env:
          SUDO_PASS: ${{ secrets.DEPLOY_PASSWORD }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          envs: SUDO_PASS           # ← WICHTIG: macht $SUDO_PASS auf dem Server verfügbar
          script: |
            set -e
            s() { echo "$SUDO_PASS" | sudo -S -p '' "$@"; }

            ARCHIVE=/tmp/m-pathy.tar.gz
            NEW=/srv/m-pathy.new
            CUR=/srv/m-pathy

            s systemctl stop m-pathy || true
            s rm -rf "$NEW"
            s mkdir -p "$NEW"
            s tar -C "$NEW" -xzf "$ARCHIVE"
            s rm -f "$ARCHIVE"

            test -f "$NEW/package.json" || { echo "Missing package.json after extract" >&2; exit 1; }

            s rm -rf "${CUR}.prev" || true
            [ -d "$CUR" ] && s mv "$CUR" "${CUR}.prev" || true
            s mv "$NEW" "$CUR"

            s chown -R "$USER":"$USER" "$CUR"
            s find "$CUR" -type d -exec chmod u+rwx {} \;

            cd "$CUR"
            npm ci --omit=dev

            s systemctl daemon-reload || true
            s systemctl restart m-pathy
            s systemctl status m-pathy --no-pager -l | head -n 60 || true
      - name: Remote deploy (atomic switch, with sudo password)
        uses: appleboy/ssh-action@v1.0.3
        env:
          SUDO_PASS: ${{ secrets.DEPLOY_PASSWORD }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          envs: SUDO_PASS
          script: |
            set -e
            s() { echo "$SUDO_PASS" | sudo -S -p '' "$@"; }

            ARCHIVE=/tmp/m-pathy.tar.gz
            NEW=/srv/m-pathy.new
            CUR=/srv/m-pathy
            PROMPT_DST=/etc/m-pathy/system-prompt.txt

            s systemctl stop m-pathy || true
            s rm -rf "$NEW"
            s mkdir -p "$NEW"
            s tar -C "$NEW" -xzf "$ARCHIVE"
            s rm -f "$ARCHIVE"

            test -f "$NEW/package.json" || { echo "Missing package.json after extract" >&2; exit 1; }

            s rm -rf "${CUR}.prev" || true
            [ -d "$CUR" ] && s mv "$CUR" "${CUR}.prev" || true
            s mv "$NEW" "$CUR"

            s chown -R "$USER":"$USER" "$CUR"
            s find "$CUR" -type d -exec chmod u+rwx {} \;

            cd "$CUR"
            npm ci --omit=dev

            # >>> Prompt aus dem Code-Bundle heraus nach /etc legen (falls vorhanden)
            if [ -f "$CUR/GPTX.txt" ]; then
              s install -D -m 0644 "$CUR/GPTX.txt" "$PROMPT_DST"
            fi

            s systemctl daemon-reload || true
            s systemctl restart m-pathy
            s systemctl status m-pathy --no-pager -l | head -n 60 || true
