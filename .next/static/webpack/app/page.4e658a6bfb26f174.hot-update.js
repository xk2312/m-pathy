"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/modules/crystalEngine.ts":
/*!**************************************!*\
  !*** ./app/modules/crystalEngine.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildCrystalM: function() { return /* binding */ buildCrystalM; }\n/* harmony export */ });\n// app/modules/crystalEngine.ts\n/**\n * Punkt-M: Lichtenstein-Style (dotted strokes)\n * - gleichmäßiger Punktabstand entlang der 4 M-Segmente\n * - mehrere punktierte Bahnen quer zur Linie für Strichdicke (ebenfalls Punkte)\n * - Aufbau als Wellenfront ab Anchor (erster Meteor-Punkt)\n */ function buildCrystalM(ctx, anchor) {\n    const isMobile = /Mobi|Android|iPhone|iPad/i.test(navigator.userAgent);\n    // Geometrie in CSS-Pixeln\n    const rect = ctx.canvas.getBoundingClientRect();\n    const w = rect.width, h = rect.height;\n    // M-Kontrollpunkte (responsive)\n    const baseX = w * 0.30;\n    const baseY = h * 0.70;\n    const spanX = Math.max(200, w * 0.24);\n    const peakY = Math.min(baseY - h * 0.30, h * 0.40);\n    const P = [\n        {\n            x: baseX,\n            y: baseY\n        },\n        {\n            x: baseX + spanX * 0.25,\n            y: peakY\n        },\n        {\n            x: baseX + spanX * 0.50,\n            y: baseY * 0.93\n        },\n        {\n            x: baseX + spanX * 0.75,\n            y: peakY\n        },\n        {\n            x: baseX + spanX,\n            y: baseY\n        }\n    ];\n    const segs = [\n        {\n            a: P[0],\n            b: P[1]\n        },\n        {\n            a: P[1],\n            b: P[2]\n        },\n        {\n            a: P[2],\n            b: P[3]\n        },\n        {\n            a: P[3],\n            b: P[4]\n        }\n    ];\n    // ---- Lichtenstein-Parameter (einfach anpassbar) -------------------------\n    const spacingPx = isMobile ? 10 : 8; // Abstand zwischen Punkten entlang der Linie\n    const thicknessPx = isMobile ? 12 : 18; // „Linienstärke“ als Anzahl paralleler Punktbahnen\n    const dotRadius = isMobile ? 1.6 : 2.0;\n    const shadowBlur = 2; // sehr klein, damit nichts verschmiert\n    const perFrame = isMobile ? 80 : 140; // Aufbaugeschwindigkeit (Punkte pro Frame)\n    // -------------------------------------------------------------------------\n    // Punktwolke aus segmentierten, punktierten „Bahnen“\n    const points = [];\n    for (const { a, b } of segs){\n        const dx = b.x - a.x;\n        const dy = b.y - a.y;\n        const len = Math.hypot(dx, dy);\n        if (len === 0) continue;\n        const tx = dx / len; // Tangente (Einheitsvektor)\n        const ty = dy / len;\n        const nx = ty; // Normale (links)\n        const ny = -tx;\n        // Anzahl paralleler Bahnen quer zur Linie\n        const rows = Math.max(1, Math.round(thicknessPx / spacingPx));\n        const half = (rows - 1) / 2;\n        // Bahnen Offsets (symmetrisch um die Mittelachse)\n        for(let r = 0; r < rows; r++){\n            const offset = (r - half) * spacingPx; // Abstand quer\n            // Punkte entlang der Linie in konstantem Abstand\n            const steps = Math.max(2, Math.floor(len / spacingPx));\n            for(let i = 0; i <= steps; i++){\n                const d = i * spacingPx;\n                const x = a.x + tx * d + nx * offset;\n                const y = a.y + ty * d + ny * offset;\n                points.push({\n                    x,\n                    y\n                });\n            }\n        }\n    }\n    // Reihenfolge: Wellenfront vom Anchor (nah → fern) mit leichter Varianz\n    points.sort((p1, p2)=>{\n        const d1 = Math.hypot(p1.x - anchor.x, p1.y - anchor.y);\n        const d2 = Math.hypot(p2.x - anchor.x, p2.y - anchor.y);\n        return d1 - d2 + (Math.random() - 0.5) * 4;\n    });\n    // Erster Punkt (Meteor)\n    drawDot(anchor.x, anchor.y, dotRadius + 0.6);\n    // Aufbau animieren\n    let idx = 0;\n    function frame() {\n        for(let i = 0; i < perFrame && idx < points.length; i++, idx++){\n            const p = points[idx];\n            drawDot(p.x, p.y, dotRadius);\n        }\n        if (idx < points.length) requestAnimationFrame(frame);\n    }\n    requestAnimationFrame(frame);\n    function drawDot(x, y, r) {\n        ctx.beginPath();\n        ctx.arc(x, y, r, 0, Math.PI * 2);\n        ctx.fillStyle = \"#FFD700\"; // Gold\n        // sehr dezenter Glow, damit Punkte NICHT verschmelzen\n        ctx.shadowColor = \"rgba(255,215,0,0.35)\";\n        ctx.shadowBlur = shadowBlur;\n        ctx.fill();\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/modules/crystalEngine.ts\n"));

/***/ })

});