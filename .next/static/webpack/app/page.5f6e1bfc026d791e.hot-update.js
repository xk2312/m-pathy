"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/modules/crystalEngine.ts":
/*!**************************************!*\
  !*** ./app/modules/crystalEngine.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildCrystalM: function() { return /* binding */ buildCrystalM; }\n/* harmony export */ });\n// app/modules/crystalEngine.ts\n// „Kristalline Entfaltung“: Aus dem Ankerpunkt unten links wachsen\n// kristallartige Arme zu den M-Punkten und setzen goldene Punkte.\nfunction buildCrystalM(ctx) {\n    const isMobile = /Mobi|Android|iPhone|iPad/i.test(navigator.userAgent);\n    const w = ctx.canvas.width;\n    const h = ctx.canvas.height;\n    console.log(\"[crystalEngine] start\");\n    // === Responsive Geometrie für ein harmonisches M ===========================\n    // Ankerpunkt: unten links (korrespondiert mit Meteor-Impact)\n    const baseX = w * 0.30;\n    const baseY = h * 0.70;\n    // Gesamtbreite und Spitzenhöhe des M (anpassbar)\n    const spanX = Math.max(160, w * 0.22) // horizontale Spannweite\n    ;\n    const peakY = Math.min(baseY - h * 0.28, h * 0.42) // Höhe der oberen Peaks\n    ;\n    // 5 Schlüsselpunkte (nur Punkte, keine Linien – Kristallarme übernehmen Wege)\n    const mPoints = [\n        {\n            x: baseX,\n            y: baseY\n        },\n        {\n            x: baseX + spanX * 0.25,\n            y: peakY\n        },\n        {\n            x: baseX + spanX * 0.50,\n            y: baseY * 0.93\n        },\n        {\n            x: baseX + spanX * 0.75,\n            y: peakY\n        },\n        {\n            x: baseX + spanX,\n            y: baseY\n        }\n    ];\n    // Von Punkt 0 (Anker) zu allen anderen Punkten wachsen lassen\n    const arms = mPoints.map((p, i)=>({\n            sx: mPoints[0].x,\n            sy: mPoints[0].y,\n            tx: p.x,\n            ty: p.y,\n            t: i === 0 ? 9999 : 0,\n            done: i === 0\n        }));\n    // === Sofort sichtbarer Ankerpunkt =========================================\n    drawGoldPoint(mPoints[0].x, mPoints[0].y, isMobile ? 3 : 4);\n    const maxProgress = isMobile ? 30 : 42 // Frames pro Arm\n    ;\n    let rafId = 0;\n    function drawFrame() {\n        // Weiches Clear für Nachleuchten (Kristall-Trail)\n        ctx.fillStyle = \"rgba(0,0,0,0.22)\";\n        ctx.fillRect(0, 0, w, h);\n        // Ankerpunkt erneut rendern, damit er nie „verschwindet“\n        drawGoldPoint(mPoints[0].x, mPoints[0].y, isMobile ? 3 : 4);\n        let allDone = true;\n        for (const arm of arms){\n            if (!arm.done) {\n                arm.t++;\n                const p = Math.min(arm.t / maxProgress, 1);\n                const nx = arm.sx + (arm.tx - arm.sx) * p;\n                const ny = arm.sy + (arm.ty - arm.sy) * p;\n                // Kristallarm zeichnen\n                ctx.beginPath();\n                ctx.moveTo(arm.sx, arm.sy);\n                ctx.lineTo(nx, ny);\n                ctx.strokeStyle = \"rgba(173,216,230,0.95)\" // hell-kristallblau\n                ;\n                ctx.lineWidth = isMobile ? 1.6 : 2.2;\n                ctx.shadowColor = \"rgba(173,216,230,1)\";\n                ctx.shadowBlur = 14;\n                ctx.stroke();\n                if (p === 1) arm.done = true;\n            }\n            if (!arm.done) allDone = false;\n        }\n        // Endpunkte als goldene Punkte setzen\n        for (const arm of arms){\n            if (arm.done && !(arm.sx === arm.tx && arm.sy === arm.ty)) {\n                drawGoldPoint(arm.tx, arm.ty, isMobile ? 2.6 : 3.2);\n            }\n        }\n        if (!allDone) {\n            rafId = requestAnimationFrame(drawFrame);\n        } else {\n            // finale Stabilisierung: Punkte noch einmal kräftig leuchten lassen\n            for (const p of mPoints)drawGoldPoint(p.x, p.y, isMobile ? 3 : 4);\n            console.log(\"[crystalEngine] done – M aufgebaut\");\n        }\n    }\n    // Kleiner Delay, damit der Meteor-Rahmen „steht“\n    setTimeout(()=>rafId = requestAnimationFrame(drawFrame), 80);\n    // === Helpers ==============================================================\n    function drawGoldPoint(x, y, r) {\n        ctx.beginPath();\n        ctx.arc(x, y, r, 0, Math.PI * 2);\n        ctx.fillStyle = \"#ffd700\";\n        ctx.shadowColor = \"rgba(255,215,0,1)\";\n        ctx.shadowBlur = 18;\n        ctx.fill();\n    }\n// Option: bei Bedarf Cleanup zurückgeben\n// return () => cancelAnimationFrame(rafId)\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/modules/crystalEngine.ts\n"));

/***/ })

});